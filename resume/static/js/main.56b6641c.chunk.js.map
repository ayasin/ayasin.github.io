{"version":3,"sources":["resumeDetails.js","contactInfo.js","workInfo.js","educationInfo.js","App.js","serviceWorker.js","index.js"],"names":["hostLocation","name","links","contacts","experience","company","dateRange","role","projects","skills","education","school","degree","props","linkList","map","link","idx","dot","length","href","contactList","contact","className","key","WorkItem","style","marginTop","marginBottom","borderTop","color","join","project","WorkInfo","borderBottom","jobs","job","EducationInfo","console","log","schools","App","ResumeDetails","margin","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.56b6641c.chunk.js","sourcesContent":["const name = \"Amir Yasin\";\n\nconst hostLocation = \"https://ayasin.github.io\";\n\nconst links = [\n  [\"Github\", \"https://github.com/ayasin\"],\n  [\"LinkedIn\", \"https://linkedin.com/in/iamamir\"],\n  [\"Medium\", \"https://medium.com/@ayasin\"]\n];\n\nconst contacts = [[\"ayasin@datatensor.com\", \"mailto:ayasin@datatensor.com\"]];\n\nconst experience = [\n  {\n    company: \"2U\",\n    dateRange: \"05/16 - Present\",\n    role: \"Engineer 4\",\n    projects: [\n      \"Architected and led development of numerous products to facilitate lead capture.\",\n      \"Mentored junior developers in React, NodeJS, and Rust.\",\n      \"Shared knowledge about machine learning/deep learning throughout 2U tech.\",\n      \"Analyzed data from numerous sources to determine lead loss (esp focused on ad blocking traffic), and recommend mitigation strategies.\",\n      \"Implemented initial grading system replacement for Moodle while on the Online Campus team.\",\n      \"Led a month long hackathon team with the goal of reducing the cost and improving the quality of student residency/internship placement\"\n    ],\n    skills: [\n      \"Javascript\",\n      \"Rust\",\n      \"Python\",\n      \"Pytorch\",\n      \"React\",\n      \"NodeJS\",\n      \"Machine Learning\",\n      \"Data Analytics\",\n      \"NLP\"\n    ]\n  },\n  {\n    company: \"DataTensor\",\n    dateRange: \"08/03 - Present\",\n    role: \"President\",\n    projects: [\n      \"Worked with various clients to solve hard technical problems in their businesses.  See sampling of specific clients below.\"\n    ],\n    skills: ['details below']\n  },\n  {\n    company: \"Kind Health (DataTensor)\",\n    dateRange: \"11/16 - Present\",\n    role: \"Consultant\",\n    projects: [\n      \"Architected and developed inital version of online healthcare marketplace in React.\",\n      \"Mentored junior developers.\",\n      \"Assisted in introducing Agile processes to make team more effective.\"\n    ],\n    skills: [\"Javascript\", \"React\", \"Agile\"]\n  },\n  {\n    company: \"June Recruiting Platform (DataTensor)\",\n    dateRange: \"3/15-12/15\",\n    role: \"Consultant\",\n    projects: [\n      \"Architected and implemented full stack recruitment platform primarily in React and NodeJS.\",\n      \"Interfaced with stakeholders to ensure fit.\",\n      \"Developed tools to import and analyze data from other platforms.\"\n    ],\n    skills: [\n      \"Javascript\",\n      \"React\",\n      \"NodeJS\",\n      \"Natural Langauge Processing\",\n      \"Machine Learning\"\n    ]\n  },\n  {\n    company: \"Sapling Learning (DataTensor)\",\n    dateRange: \"09/14 - 09/15\",\n    role: \"Consultant\",\n    projects: [\n      \"Led team to redesign and rearchitect an existing flash based homework system into a single page React application\",\n      \"Created plugin system that allowed for easy future expantion into different subjects by adding new modules\",\n      \"Wrote mock server code to allow disconnected development of modules\",\n      \"Created a test harness to test components in isolation\",\n      \"Trained 3rd party developers on how to create modules for the system\",\n      \"The app was later embedded into various homework modules and e-books\"\n    ],\n    skills: [\"Javascript\", \"React\", \"Agile\"]\n  },\n  {\n    company: \"Thermopylae Science And Technology (DataTensor)\",\n    dateRange: \"02/12 - 09/14\",\n    role: \"Consultant\",\n    projects: [\n      \"Responsible for architecture and implementation of core technology stack\",\n      \"Custom Message Queue solution to address needs of closed network, disconnected and mobile users\",\n      \"Designed an Agent Manager which acts as a host for business logic\",\n      \"Designed and developed complex event processor capable of processing millions of events per second\",\n      \"Common data abstraction service which allows developers to access data from anywhere without caring where or how it's stored\",\n      'Created \"Atlas\", a Mac application to help developers develop on and integrate with the Core Services stack',\n      \"Helped rewrite the entire backend of a TST GeoSpatial product (iSpatial) to utilize the Core Services stack\",\n      \"Responsible for maintenance and development of iOS offering as well as Android offering for Windsheer product\",\n      \"Significantly reduced battery utilization of application through improvements to radio usage\",\n      \"Created SDK on both Android and iOS for external developers to plug functionality into apps\"\n    ],\n    skills: [\"Java\", \"Javascript\", \"AngularJS\", \"Objective-C\", \"Agile\"]\n  },\n  {\n    company: \"Other Clients (DataTensor)\",\n    dateRange: \"09/03 - Present\",\n    role: \"Consultant\",\n    projects: [\n      \"Novus - Responsible for designing and developing a celebrity personality monitization platform on iOS and Android\",\n      \"DiscoverMyVoice - Created an assistive communication app for severely disabled children for Android and iOS\",\n      \"MobileAlly - Encrypted SIP communication client for Android\",\n      \"AviSys - Electronic warfare countermeasures system for wide body aircraft using VXWorks\",\n      \"Buffalo Wireless - Wireless LAN card driver for Windows\",\n      \"Toolbuilders Labs - Created compiler for C to assist in static analysis of code for security vulnerabilities\",\n      \"Several others under NDA\"\n    ],\n    skills: [\"Javascript\", \"React\", \"Objective-C\", \"Java\", \"Agile\"]\n  }\n];\n\nconst education = [\n  {\n    school: \"Oklahoma City University\",\n    dateRange: \"1996-1998\",\n    degree: \"BS Computer Science\"\n  }\n];\n\nexport default {\n  hostLocation,\n  name,\n  links,\n  contacts,\n  experience,\n  education\n};\n","import React from 'react';\n\nexport default function (props) {\n  const links = props.linkList.map((link, idx) => {\n    const dot = idx < props.linkList.length - 1 ? ' . ' : '';\n    return (\n      <>\n        <a href={link[1]}>{link[0]}</a>{dot}\n      </>\n    )\n  })\n  const contacts = props.contactList.map((contact) => (\n    <div className=\"row\" key={contact[0]}>\n      <div className=\"col-12 text-right\">\n        <a href={contact[1]}>{contact[0]}</a>\n      </div>\n    </div>\n  ));\n  return <>\n    {contacts}\n    <div className=\"row\">\n      <div className=\"col-12 text-right small\">\n          {links}\n      </div>\n    </div>\n  </>\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction WorkItem(props) {\n  return (\n    <div\n      style={{\n        marginTop: \"20px\",\n        marginBottom: \"5px\",\n        borderTop: \"1px solid lightgray\"\n      }}\n    >\n      <div className=\"row\">\n        <div className=\"col-xs-12 col-md-8\">\n          <h4>{props.company}</h4>\n          <strong>{props.role}</strong>\n          <br />\n        </div>\n        <div className=\"col-xs-12 col-md-4 text-right\">\n          {props.dateRange}\n          <br />\n          <span className=\"small\" style={{ color: \"lightgray\" }}>\n            {props.skills.join(\", \")}\n          </span>\n        </div>\n      </div>\n      {props.projects.map((project, idx) => (\n        <div className=\"row\" key={idx}>\n          <div className=\"col-md-12\">{project}</div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nWorkItem.propTypes = {\n  company: PropTypes.string,\n  dateRange: PropTypes.string,\n  role: PropTypes.string,\n  projects: PropTypes.arrayOf(PropTypes.string),\n  skills: PropTypes.arrayOf(PropTypes.string)\n};\n\nfunction WorkInfo(props) {\n  return (\n    <div style={{ borderBottom: \"1px solid lightgray\" }}>\n      {props.jobs.map(job => (\n        <WorkItem {...job} key={`${job.company}+${job.dateRange}`} />\n      ))}\n    </div>\n  );\n}\n\nWorkInfo.propTypes = {\n  jobs: PropTypes.arrayOf(\n    PropTypes.shape({\n      company: PropTypes.string,\n      dateRange: PropTypes.string,\n      role: PropTypes.string,\n      projects: PropTypes.arrayOf(PropTypes.string),\n      skills: PropTypes.arrayOf(PropTypes.string)\n    })\n  )\n};\n\nexport default WorkInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction EducationInfo(props) {\n  console.log(props)\n  return (<>\n    {props.schools.map((school) => (\n      <div className=\"row\" key={`${school.school}${school.degree}`}>\n        <div className=\"col-xs-12 col-md-8\">\n          <h4>{school.school}</h4>\n          {school.degree}<br />\n        </div>\n        <div className=\"col-xs-12 col-md-4 text-right\">\n            {school.dateRange}<br />\n        </div>\n      </div>\n    ))}\n  </>)\n}\n\nEducationInfo.propTypes = {\n    schools: PropTypes.arrayOf(PropTypes.shape({\n        school: PropTypes.string,\n        dateRange: PropTypes.string,\n        degree: PropTypes.string,\n    }))\n}\n\nexport default EducationInfo;\n","import React from 'react';\nimport './App.css';\nimport ResumeDetails from './resumeDetails';\nimport ContactInfo from './contactInfo';\nimport WorkInfo from './workInfo';\nimport EducationInfo from './educationInfo';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-xs-12 col-md-6\">\n            <h1>{ResumeDetails.name}</h1>\n          </div>\n          <div className=\"col-xs-12 col-md-6\">\n            <ContactInfo contactList={ResumeDetails.contacts} linkList={ResumeDetails.links} />\n          </div>\n        </div>\n        <div className=\"row\" style={{ marginTop: '20px'}}>\n          <div className=\"col-12\">\n            <h2>Work Experience</h2>\n          </div>\n        </div>\n        <WorkInfo jobs={ResumeDetails.experience} />\n        <div className=\"row\" style={{ marginTop: '20px'}}>\n          <div className=\"col-12\">\n            <h2>Education</h2>\n          </div>\n        </div>\n        <EducationInfo schools={ResumeDetails.education} />\n        <div className=\"row\">\n          <div className=\"col-12 text-center small\" style={{margin: '25px'}}>\n            <a href={ResumeDetails.hostLocation}>{ResumeDetails.hostLocation}</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'typeface-archivo';\nimport 'typeface-roboto-condensed';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}